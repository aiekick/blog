"use strict";(self.webpackChunkfunparadigm=self.webpackChunkfunparadigm||[]).push([[2466],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),f=o,m=p["".concat(l,".").concat(f)]||p[f]||d[f]||a;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},4891:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return d}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],s={sidebar_position:-3},l="NoodlesPlate 0.1.3075",c={unversionedId:"softwares/noodlesplate/changelog/version_0_1_3075",id:"softwares/noodlesplate/changelog/version_0_1_3075",title:"NoodlesPlate 0.1.3075",description:"NoodlesPlate 0.1.3075",source:"@site/docs/softwares/noodlesplate/changelog/version_0_1_3075.md",sourceDirName:"softwares/noodlesplate/changelog",slug:"/softwares/noodlesplate/changelog/version_0_1_3075",permalink:"/blog_funparadigm/docs/softwares/noodlesplate/changelog/version_0_1_3075",editUrl:"https://blog.funparadigm.com/tree/main/packages/create-docusaurus/templates/shared/docs/softwares/noodlesplate/changelog/version_0_1_3075.md",tags:[],version:"current",sidebarPosition:-3,frontMatter:{sidebar_position:-3},sidebar:"tutorialSidebar",previous:{title:"NoodlesPlate 0.5.0897",permalink:"/blog_funparadigm/docs/softwares/noodlesplate/changelog/version_0_5_0897"},next:{title:"NoodlesPlate 0.1.1440",permalink:"/blog_funparadigm/docs/softwares/noodlesplate/changelog/version_0_1_1440"}},u={},d=[],p={toc:d};function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"noodlesplate-013075"},"NoodlesPlate 0.1.3075"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/aiekick/NoodlesPlate/releases/tag/v0.1.3075"},"NoodlesPlate 0.1.3075")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"[ADD] Mac version added (x64 only)\n[ADD] Linux version added (x64 only)\n[ADD] Add a timeline widget :\n  * inspired by the timeline of Blender3D\n  * bezier curve based : three control points mode : free, aligned, symmetric\n  * add key by clinking the dot on the left of uniforms in uniforms pane\n  * move keys by dragging with mouse\n  * you can add whole the current shader config to the timeline and clean for keep only changed uniforms after\n  * use middle mouse on timebar, valuebar or view for scale the view\n  * can rescale keys along time by values (Re Scale Menu)\n  * you can disable gpu upload for frame whith a button\n  * you can show all keys or edit channel(s) for show corrresponding curves (little checkbox on the right of names in timeline) \n  * can export current frames to pictures (video export is planned but not supported for the moment)\n\n[ADD] Opengl chooser at start, can support :\n  * 3.2 mini : Geometry Stage \n  * 4.0 : Tesselation Stage\n  * 4.3 : Compute Stage\n\n[ADD] New cross platform File Tracker system :\n  * need the .glsl extention associated with your favorite Editor\n  * on Linux, a bug appear with some editors, like gedit ( a file called .goutputstream-xxx is generated after file save, NDP not detect the file changes due to that)\n  * Succesfully tested on Linux and Mac with atom and vscode. no problem seen on windows with many editor\n\n[FIX] Many Bug Fixs\n")))}f.isMDXComponent=!0}}]);